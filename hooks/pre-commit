#!/bin/sh
#
# VizRepoAssist Pre-commit Hook
# Automatically captures screenshots before each commit
#

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo "${BLUE}🔍 VizRepoAssist: Preparing to capture screenshots...${NC}"

# Get the project root directory
PROJECT_ROOT=$(git rev-parse --show-toplevel)
VIZREPO_DIR="$PROJECT_ROOT/.vizrepo"
CONFIG_FILE="$PROJECT_ROOT/vizrepo.config.js"

# Check if VizRepoAssist is installed/configured
if [ ! -d "$VIZREPO_DIR" ]; then
    echo "${YELLOW}⚠️  VizRepoAssist not initialized. Run 'vizrepo init' first.${NC}"
    exit 0
fi

# Check for config file (optional)
if [ ! -f "$CONFIG_FILE" ]; then
    echo "${YELLOW}⚠️  No vizrepo.config.js found, using defaults.${NC}"
fi

# Check if we're in the middle of a git operation
if [ -f "$PROJECT_ROOT/.git/MERGE_HEAD" ] || [ -f "$PROJECT_ROOT/.git/REBASE_HEAD" ]; then
    echo "${YELLOW}⚠️  Git operation in progress, skipping screenshot capture.${NC}"
    exit 0
fi

# Check if this is an initial commit (no HEAD yet)
if ! git rev-parse --verify HEAD >/dev/null 2>&1; then
    echo "${YELLOW}⚠️  Initial commit detected, skipping screenshot capture.${NC}"
    exit 0
fi

# Get commit information
COMMIT_HASH=$(git rev-parse --short HEAD)
BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
TIMESTAMP=$(date -u +"%Y-%m-%dT%H-%M-%SZ")

echo "${BLUE}📸 Capturing screenshots for commit ${COMMIT_HASH} on branch ${BRANCH_NAME}...${NC}"

# Try to detect Next.js application
NEXTJS_DETECTED=false
if [ -f "$PROJECT_ROOT/next.config.js" ] || [ -f "$PROJECT_ROOT/next.config.ts" ] || [ -f "$PROJECT_ROOT/next.config.mjs" ]; then
    NEXTJS_DETECTED=true
    echo "${GREEN}✓ Next.js application detected${NC}"
fi

# Check if development server might be running
DEV_SERVER_RUNNING=false
if command -v curl >/dev/null 2>&1; then
    if curl -s -f http://localhost:3000 >/dev/null 2>&1; then
        DEV_SERVER_RUNNING=true
        echo "${GREEN}✓ Development server detected on localhost:3000${NC}"
    elif curl -s -f http://localhost:3001 >/dev/null 2>&1; then
        DEV_SERVER_RUNNING=true
        echo "${GREEN}✓ Development server detected on localhost:3001${NC}"
    fi
fi

# If we can't detect a running server, provide helpful message
if [ "$DEV_SERVER_RUNNING" = false ]; then
    echo "${YELLOW}⚠️  No development server detected.${NC}"
    echo "${YELLOW}   For automatic screenshots, ensure your dev server is running.${NC}"
    echo "${YELLOW}   You can skip this with: git commit --no-verify${NC}"
    exit 0
fi

# Create session directory
SESSION_ID="${COMMIT_HASH}_${TIMESTAMP}_${BRANCH_NAME}"
SESSION_DIR="$VIZREPO_DIR/screenshots/$SESSION_ID"
mkdir -p "$SESSION_DIR/desktop"
mkdir -p "$SESSION_DIR/mobile"

echo "${BLUE}📁 Created session directory: $SESSION_ID${NC}"

# Try to find a Node.js-based capture script
CAPTURE_SCRIPT=""
if [ -f "$PROJECT_ROOT/node_modules/.bin/vizrepo" ]; then
    CAPTURE_SCRIPT="$PROJECT_ROOT/node_modules/.bin/vizrepo"
elif [ -f "$PROJECT_ROOT/dist/capture.js" ]; then
    CAPTURE_SCRIPT="node $PROJECT_ROOT/dist/capture.js"
elif command -v vizrepo >/dev/null 2>&1; then
    CAPTURE_SCRIPT="vizrepo"
fi

# Attempt to capture screenshots
if [ -n "$CAPTURE_SCRIPT" ]; then
    echo "${BLUE}🚀 Running screenshot capture...${NC}"
    
    # Set environment variables for the capture script
    export VIZREPO_SESSION_DIR="$SESSION_DIR"
    export VIZREPO_BASE_URL="http://localhost:3000"
    
    # Run the capture script
    if $CAPTURE_SCRIPT capture --session="$SESSION_ID" 2>/dev/null; then
        echo "${GREEN}✅ Screenshots captured successfully!${NC}"
    else
        echo "${YELLOW}⚠️  Screenshot capture encountered issues, but continuing with commit...${NC}"
        echo "${YELLOW}   Check your development server and try: vizrepo capture${NC}"
    fi
else
    echo "${YELLOW}⚠️  VizRepoAssist capture script not found.${NC}"
    echo "${YELLOW}   Install with: npm install -g vizrepo-assist${NC}"
    echo "${YELLOW}   Or build locally: npm run build${NC}"
fi

# Update metadata
METADATA_FILE="$VIZREPO_DIR/index.json"
if [ -f "$METADATA_FILE" ]; then
    # Create a simple metadata update (basic shell JSON manipulation)
    TEMP_FILE=$(mktemp)
    cat "$METADATA_FILE" | head -n -1 > "$TEMP_FILE"  # Remove last line (closing brace)
    echo "  {" >> "$TEMP_FILE"
    echo "    \"sessionId\": \"$SESSION_ID\"," >> "$TEMP_FILE"
    echo "    \"timestamp\": \"$(date -u +"%Y-%m-%dT%H:%M:%SZ")\"," >> "$TEMP_FILE"
    echo "    \"commitHash\": \"$COMMIT_HASH\"," >> "$TEMP_FILE"
    echo "    \"branch\": \"$BRANCH_NAME\"," >> "$TEMP_FILE"
    echo "    \"desktopPath\": \"$SESSION_DIR/desktop\"," >> "$TEMP_FILE"
    echo "    \"mobilePath\": \"$SESSION_DIR/mobile\"" >> "$TEMP_FILE"
    echo "  }" >> "$TEMP_FILE"
    echo "}" >> "$TEMP_FILE"
    mv "$TEMP_FILE" "$METADATA_FILE"
fi

echo "${GREEN}🎉 VizRepoAssist pre-commit hook completed!${NC}"
echo "${BLUE}📱 Screenshots saved to: .vizrepo/screenshots/$SESSION_ID${NC}"

# Exit successfully to allow commit to proceed
exit 0